
// 1 10 5 8 7 6 4 3 2 9
/*
선택정렬- 비효율적인 알고리즘 중 하나 
-> 데이터의 수가 조금만 커지더라도 처리할 연산량이 너무 많아짐. 
'가장 작은 것'을 선택해서 제일 앞으로 보내는 알고리즘 
-> 알고리즘은 하기 전에 손으로 먼저 써보기
=> 10 + 9+ 8 + .. + 1
=> 10 * (10+1) / 2 = 55
=> N * (N+1) / 2 => 0(N*N) 특정한 알고리즘의 수행시간을 가장 간략하게 표시한 것. 0(N^2) 
*/
#include <stdio.h>

int main(void) 
{	
	// i, j , min 가장 작은 원소, index 가장 작은 원소가 들어가 있는 인덱스, temp 두 개의 위치를 바꾸기 위해 필요한 변수 
	int i, j, min, index, temp;
	int array[10]={1,10,5,8,7,6,4,3,2,9};
	
	for(i=0; i<10; i++)
	{
		min = 9999; // 모든 원소들 보다 큰 숫자 아무거나 넣어줌.
		
		for(j=i; j<10; j++){
			// 순차적으로 보면서 최소값이 있다면, 기억을 해둔 
			if(min>array[j]){
				min = array[j];
				index= j;
			}
		} 
		
		// swaping
		temp = array[i];
		array[i] = array[index];
		array[index] = temp;
	
	}
	
	for(i=0;i<10; i++)
		printf("%d ", array[i]);
	return 0; 
}